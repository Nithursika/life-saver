DELIMITER //

-- Trigger for INSERT operation
CREATE TRIGGER update_ambulance_coordinates_after_insert
AFTER INSERT ON ambulance_location_history
FOR EACH ROW
BEGIN
  UPDATE ambulance
  SET
    latitude = NEW.latitude,
    longitude = NEW.longitude
  WHERE
    ambulanceId = NEW.ambulanceId;
END;
//

-- Trigger for UPDATE operation
CREATE TRIGGER update_ambulance_coordinates_after_update
AFTER UPDATE ON ambulance_location_history
FOR EACH ROW
BEGIN
  UPDATE ambulance
  SET
    latitude = NEW.latitude,
    longitude = NEW.longitude
  WHERE
    ambulanceId = NEW.ambulanceId;
END;
//



DELIMITER //

-- Trigger for INSERT operation
CREATE TRIGGER update_ambulance_after_insert
AFTER INSERT ON ambulance_driver_connection
FOR EACH ROW
BEGIN
  UPDATE ambulance
  SET
    driverID = NEW.driverID,
    driverAssigned = 1,
    isAvailable = 1
  WHERE
    ambulanceId = NEW.ambulanceId;
END;
//

-- Trigger for UPDATE operation
CREATE TRIGGER update_ambulance_after_update
AFTER UPDATE ON ambulance_driver_connection
FOR EACH ROW
BEGIN
  UPDATE ambulance
  SET
    driverID = null,
    driverAssigned = 0,
    isAvailable = 0
  WHERE
    ambulanceId = NEW.ambulanceId;
END;
//



DELIMITER //

-- Trigger for INSERT operation
CREATE TRIGGER update_ambulanceavailable_after_insert
AFTER INSERT ON user_ambulance_connection
FOR EACH ROW
BEGIN
  UPDATE ambulance
  SET
    isAvailable = 0
  WHERE
    ambulanceId = NEW.ambulanceId;
END;
//

-- Trigger for UPDATE operation
CREATE TRIGGER `update_ambulanceavailable_after_update`
AFTER UPDATE ON `user_ambulance_connection`
FOR EACH ROW
BEGIN
  IF NEW.disconnectedTime IS NOT NULL THEN
    UPDATE ambulance
    SET
      isAvailable = 1
    WHERE
      ambulanceId = NEW.ambulanceId;
  END IF;
END;
//



DELIMITER //

-- Trigger for INSERT operation
CREATE TRIGGER update_status_after_insert
AFTER INSERT ON user_ambulance_connection
FOR EACH ROW
BEGIN
  UPDATE emergency_request
  SET
    status = "Accepted"
  WHERE
    requestID = NEW.requestID;
END;
//

DELIMITER //

-- Trigger for UPDATE operation
CREATE TRIGGER `update_status_after_update`
AFTER UPDATE ON `user_ambulance_connection`
FOR EACH ROW
BEGIN
  IF NEW.disconnectedTime IS NOT NULL THEN
    UPDATE emergency_request
    SET
      status = "Completed"
    WHERE
      requestID = NEW.requestID;
  END IF;
END;
//

 